<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
">
    <!-- 扫描transaction包下所有使用注解的类型 -->
    <!-- @Component @Service @Dao @Controller -->
    <context:component-scan base-package="com.cgj.spring.transaction" />

    <!-- 1:配置数据库相关参数properties的属性：${jdbc.url} -->
    <context:property-placeholder location="classpath:jdbc.properties" />
    <!-- 2:配置数据库连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 配置连接池属性 -->
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <!-- c3p0连接池的私有属性 -->
        <property name="maxPoolSize" value="30" />
        <property name="minPoolSize" value="10" />
        <!-- 关闭连接后不自动commit -->
        <property name="autoCommitOnClose" value="false" />
        <!-- 获取连接超时时间 -->
        <property name="checkoutTimeout" value="1000" />
        <!-- 获取连接失败的重试次数 -->
        <property name="acquireRetryAttempts" value="2" />
    </bean>

    <bean id="accountDao" class="com.cgj.spring.transaction.dao.impl.AccountDaoImpl">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="accountService" class="com.cgj.spring.transaction.service.impl.AccountServiceImpl">
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 编程式事务管理 -->
    <!-- 配置事物管理的模板：spring为简化事物管理的代码而提供的类 -->
    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager" />
    </bean>

    <!-- 通过ProxyFactoryBean + XML方式实现事物管理 -->
    <!-- 配置业务层的代理 -->
    <bean id="accountServiceProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <!-- 配置目标对象 -->
        <property name="target" ref="accountService" />
        <!-- 注入事物管理类 -->
        <property name="transactionManager" ref="transactionManager" />
        <!-- 注入事物的相关属性 -->
        <property name="transactionAttributes">
            <props>
                <!-- 
                    prop的格式：
                        *PROPAGATION   ：事物的传播行为
                        *ISOLATION     ：事物的隔离级别
                        *readOnly      ：只读
                        *-Exception    ：需要回滚的异常
                        *+Exception    ：不需回滚的异常
                 -->
                <prop key="transferByAOP">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>

    <!-- 通过AOP方式实现声明式事务管理 -->
    <!-- 配置事物的通知：（事物增强） -->
    <tx:advice id="txAdcive" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 
                <tx:method 相关属性
                    *propagation       ：事物传播行为
                    *isolation         ：事务隔离级别
                    *read-only         ：只读
                    *rollback-for      ：需要回滚的异常
                    *no-rollback-for   ：不需回滚的异常
                    *timeout           ：超时时间
             -->
            <tx:method name="transferByAOP" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
    <!-- 配置切面 -->
    <aop:config>
        <!-- 配置切入点 -->
        <aop:pointcut id="pointcut" expression="execution(* com.cgj.spring.transaction.service.impl.AccountServiceImpl.transferByAOP(..))"/>
        <!-- 配置切面 -->
        <aop:advisor advice-ref="txAdcive" pointcut-ref="pointcut"/>
    </aop:config>

    <!-- 配置基于注解的声明式事物 -->
    <!-- 默认使用注解来管理事物行为 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>